# Author: mosra <mosra@centrum.cz>
pkgname=magnum-extras
pkgver=dev
pkgrel=1
pkgdesc="Extras for the Magnum C++11/C++14 graphics engine"
arch=('i686' 'x86_64')
url="https://magnum.graphics"
license=('MIT')
depends=('magnum')
makedepends=('cmake' 'ninja')
options=(!strip)
provides=('magnum-extras-git')

_rootdir=$startdir/../../

build() {
    mkdir -p "$_rootdir/build"
    cd "$_rootdir/build"

    # Colored output is enabled implicitly. If Ninja detects it's outputting to
    # a pipe, it strips it away from the output, alternatively you can set the
    # GCC_COLORS= (empty) env variable to temporarily disable colors. The
    # inverse, i.e. preserving colors when Ninja outputs to a pipe can be done
    # with CLICOLOR_FORCE=1: https://github.com/ninja-build/ninja/issues/2196
    cmake .. \
        -DCMAKE_CONFIGURATION_TYPES="Debug;Release" \
        -DCMAKE_CROSS_CONFIGS=all \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_COLOR_DIAGNOSTICS=ON \
        -DMAGNUM_BUILD_TESTS=ON \
        -DMAGNUM_BUILD_GL_TESTS=ON \
        -DMAGNUM_WITH_PLAYER=ON \
        -DMAGNUM_WITH_UI=ON \
        -DMAGNUM_WITH_UI_GALLERY=ON \
        -G "Ninja Multi-Config"
    ninja all:all
}

check() {
    cd "$_rootdir/build"
    export CORRADE_TEST_SKIP_BENCHMARKS=ON
    export CORRADE_TEST_COLOR=ON

    for config in Debug Release; do
        ctest -C $config --output-on-failure -j
    done
}

package() {
    cd "$_rootdir/build"
    DESTDIR="$pkgdir/" ninja install:Debug

    # Prevent the Release build from overwriting Debug binaries
    for i in $(ls $pkgdir/usr/bin/magnum-*); do
        mv ${i}{,d}
    done

    DESTDIR="$pkgdir/" ninja install/strip:Release
}
